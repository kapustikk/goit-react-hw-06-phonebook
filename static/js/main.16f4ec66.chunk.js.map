{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","redux/phonebook-selectors.js","redux/phonebook-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container/Container.js","App.js","redux/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getFilteredContacts","contact","normalizedFilter","toLowerCase","name","includes","addContact","createAction","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","contactMatch","nameMatch","reduce","acc","numberMatch","alert","onSubmit","e","preventDefault","contactAction","className","s","form","label","type","value","onChange","currentTarget","input","button","ContactList","contactList","map","allContacts","onClick","contactActions","onDeleteContact","Filter","target","Container","children","container","App","createReducer","combineReducers","persistConfig","key","storage","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,mBCAlID,EAAOC,QAAU,CAAC,KAAO,qBAAqB,MAAQ,sBAAsB,MAAQ,wB,mBCApFD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,mC,mBCA/ED,EAAOC,QAAU,CAAC,UAAY,+B,sJCDjBC,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OACtCC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QAEpCC,EAAsB,SAAAL,GACjC,IAAMM,EAAUP,EAAYC,GAEtBO,EADSJ,EAAUH,GACOQ,cAEhC,OAAOF,EAAQF,QAAO,qBAAGK,KAClBD,cAAcE,SAASH,O,wBCLnBI,EAAaC,YAAa,iBAAiB,SAACH,EAAMI,GAAP,MAAmB,CACzEC,QAAS,CACPC,GAAIC,IAAQC,WACZR,OACAI,cAISK,EAAgBN,YAAa,oBAC7BO,EAAeP,YAAa,0B,iBCP1B,SAASQ,IACtB,IAAMnB,EAAWoB,YAAYtB,GACvBuB,EAAWC,cAFmB,EAOZC,mBAAS,IAPG,mBAO7Bf,EAP6B,KAOvBgB,EAPuB,OAQRD,mBAAS,IARD,mBAQ7BX,EAR6B,KAQrBa,EARqB,KAsB9BC,EAAe,WACnB,IAAMC,EAAY3B,EAAS4B,QACzB,SAACC,EAAKxB,GAAN,4BAAsBwB,GAAtB,CAA2BxB,EAAQG,SACnC,IAEIsB,EAAc9B,EAAS4B,QAC3B,SAACC,EAAKxB,GAAN,4BAAsBwB,GAAtB,CAA2BxB,EAAQO,WACnC,IAGF,GAAIe,EAAUlB,SAASD,IAASsB,EAAYrB,SAASG,GAEnD,OADAmB,MAAM,GAAD,OAAIvB,EAAJ,6BACE,GAGX,OACE,uBAAMwB,SA5Ba,SAAAC,GACnBA,EAAEC,iBACFV,EAAQ,IACRC,EAAU,IAENC,KAXW,SAAClB,EAAMI,GACtBS,EAASc,EAAyB3B,EAAMI,IAcxCoB,CAASxB,EAAMI,IAmBewB,UAAWC,IAAEC,KAA3C,UACE,wBAAOF,UAAWC,IAAEE,MAApB,iBAEE,uBACEC,KAAK,OACLhC,KAAK,OACLiC,MAAOjC,EACPkC,SAAU,SAAAT,GAAC,OAAIT,EAAQS,EAAEU,cAAcF,QACvCL,UAAWC,IAAEO,WAGjB,wBAAOR,UAAWC,IAAEE,MAApB,mBAEE,uBACEC,KAAK,MACLhC,KAAK,SACLiC,MAAO7B,EACP8B,SAAU,SAAAT,GAAC,OAAIR,EAAUQ,EAAEU,cAAcF,QACzCL,UAAWC,IAAEO,WAGjB,wBAAQJ,KAAK,SAASJ,UAAWC,IAAEQ,OAAnC,4B,qBC3DS,SAASC,IACtB,IAAM9C,EAAWoB,YAAYhB,GACvBiB,EAAWC,cAIjB,OACE,oBAAIc,UAAWC,IAAEU,YAAjB,SACG/C,EAASgD,KAAI,gBAAGlC,EAAH,EAAGA,GAAIN,EAAP,EAAOA,KAAMI,EAAb,EAAaA,OAAb,OACZ,qBAAawB,UAAWC,IAAEY,YAA1B,UACE,8BACGzC,EADH,KACWI,KAEX,wBAAQsC,QAAS,kBATD,SAAApC,GAAE,OAAIO,EAAS8B,EAA6BrC,IASrCsC,CAAgBtC,IAAvC,sBAJOA,Q,qBCVF,SAASuC,IACtB,IAAMZ,EAAQrB,YAAYlB,GACpBmB,EAAWC,cAIjB,OACE,sBAAMc,UAAWC,IAAEC,KAAnB,SACE,wBAAOF,UAAWC,IAAEE,MAApB,iCAEE,uBACEC,KAAK,OACLC,MAAOA,EACPC,SATS,SAAAT,GAAC,OAAIZ,EAASc,EAA2BF,EAAEqB,OAAOb,SAU3DL,UAAWC,IAAEO,a,qBCZRW,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKpB,UAAWC,IAAEoB,UAAlB,SAA8BD,KCgBjBE,I,EAAAA,EAff,WACE,OACE,cAAC,EAAD,UACE,gCACE,2CACA,cAACvC,EAAD,IAEA,0CACA,cAACkC,EAAD,IACA,cAACP,EAAD,U,wDCFF7C,EAAQ0D,YAPU,CACtB,CAAE7C,GAAI,OAAQN,KAAM,QAASI,OAAQ,aACrC,CAAEE,GAAI,OAAQN,KAAM,QAASI,OAAQ,aACrC,CAAEE,GAAI,OAAQN,KAAM,KAAMI,OAAQ,aAClC,CAAEE,GAAI,OAAQN,KAAM,OAAQI,OAAQ,eAGX,mBACxBF,GAAa,SAACX,EAAD,YAAUc,SAAV,mBAAqCd,OAD1B,cAExBkB,GAAgB,SAAClB,EAAD,OAAUc,EAAV,EAAUA,QAAV,OACfd,EAAMI,QAAO,qBAAGW,KAAgBD,QAHT,IAMrBV,EAASwD,YAAc,GAAD,eACzBzC,GAAe,SAACnB,EAAD,YAAUc,YA0Bb+C,cAAgB,CAC7B3D,QACAE,WC7BI0D,EAAgB,CACpBC,IAAK,OACLC,aAGIC,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MASWC,EAAQC,YAAe,CAClCC,QAAS,CACP7E,SAAU8E,YAAejB,EAAekB,IAE1Cf,aACAgB,UAAUC,IAGCC,EAAYC,YAAaR,GCrCtCS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaY,QAAS,KAAML,UAAWA,EAAvC,SACE,cAAC,IAAD,UACE,cAAC,EAAD,YAKRM,SAASC,eAAe,W","file":"static/js/main.16f4ec66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__2qyBI\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\",\"allContacts\":\"ContactList_allContacts__1ew0E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = state => {\n  const contact = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contact.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { createAction } from '@reduxjs/toolkit';\n// import types from './phonebook-types';\nimport shortid from 'shortid';\n\nexport const addContact = createAction('phonebook/add', (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nexport const deleteContact = createAction('phonebook/delete');\nexport const changeFilter = createAction('phonebook/changeFilter');\n\n// export const addContact = (name, number) => ({\n//     type: types.ADD,\n//     payload: {\n//         id: shortid.generate(),\n//         name,\n//         number,\n//     },\n// });\n\n// export const deleteContact = contactId => ({\n//     type: types.DELETE,\n//     payload: contactId,\n// });\n\n// export const changeFilter = value => ({\n//     type: types.CHANGE_FILTER,\n//     payload: value,\n// });\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../redux/phonebook-selectors';\nimport * as contactAction from '../../redux/phonebook-actions';\nimport s from '../ContactForm/ContactForm.module.css';\n\nexport default function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const onSubmit = (name, number) =>\n    dispatch(contactAction.addContact(name, number));\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setName('');\n    setNumber('');\n\n    if (contactMatch()) {\n      return;\n    }\n\n    onSubmit(name, number);\n  };\n\n  const contactMatch = () => {\n    const nameMatch = contacts.reduce(\n      (acc, contact) => [...acc, contact.name],\n      [],\n    );\n    const numberMatch = contacts.reduce(\n      (acc, contact) => [...acc, contact.number],\n      [],\n    );\n\n    if (nameMatch.includes(name) || numberMatch.includes(number)) {\n      alert(`${name} is already in contacts`);\n      return true;\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={e => setName(e.currentTarget.value)}\n          className={s.input}\n        ></input>\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={e => setNumber(e.currentTarget.value)}\n          className={s.input}\n        ></input>\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\n// import PropTypes from 'prop-types';\nimport * as contactActions from '../../redux/phonebook-actions';\nimport { getFilteredContacts } from '../../redux/phonebook-selectors';\nimport s from '../ContactList/ContactList.module.css';\n\nexport default function ContactList() {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(contactActions.deleteContact(id));\n\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.allContacts}>\n          <p>\n            {name}: {number}\n          </p>\n          <button onClick={() => onDeleteContact(id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\n// ContactList.propTypes = {\n//     contacts: PropTypes.arrayOf(\n//       PropTypes.shape({\n//         id: PropTypes.string.isRequired,\n//         name: PropTypes.string.isRequired,\n//         number: PropTypes.string.isRequired,\n//       }),\n//     ),\n//     onDeleteContact: PropTypes.func.isRequired,\n//   };\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/phonebook-selectors';\nimport * as contactAction from '../../redux/phonebook-actions';\nimport s from '../Filter/Filter.module.css';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = e => dispatch(contactAction.changeFilter(e.target.value));\n\n  return (\n    <form className={s.form}>\n      <label className={s.label}>\n        Find contact by name\n        <input\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n          className={s.input}\n        />\n      </label>\n    </form>\n  );\n}\n","import React from 'react';\nimport s from '../Container/Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nexport default Container;\n","import ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList.js';\nimport Filter from './components/Filter/Filter';\nimport Container from './components/Container/Container';\n\nfunction App() {\n  return (\n    <Container>\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, changeFilter } from './phonebook-actions';\n// import types from './phonebook-types';\n\nconst initialContacts = [\n  { id: 'id-1', name: 'Mummy', number: '111111111' },\n  { id: 'id-2', name: 'Daddy', number: '222222222' },\n  { id: 'id-3', name: 'Bu', number: '333333333' },\n  { id: 'id-4', name: 'Alex', number: '444444444' },\n];\n\nconst items = createReducer(initialContacts, {\n  [addContact]: (state, { payload }) => [payload, ...state],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (state, { payload }) => payload,\n});\n\n// const items = (state = initialContacts, { type, payload }) => {\n//     switch (type) {\n//         case types.ADD:\n//             return [payload, ...state];\n\n//         case types.DELETE:\n//             return state.filter(({ id }) => id !== payload);\n\n//         default:\n//             return state;\n//     }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//     switch (type) {\n//         case types.CHANGE_FILTER:\n//             return payload;\n\n//         default:\n//             return state;\n//     }\n// };\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","// import { createStore, combineReducers } from 'redux';\n\n// import { devToolsEnhancer } from 'redux-devtools-extension';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './phonebook-reducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// const rootReducer = combineReducers({\n//     contacts: phonebookReducer,\n// });\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistConfig, phonebookReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}